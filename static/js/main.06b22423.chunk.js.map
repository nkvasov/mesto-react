{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/ImagePopup/ImagePopup.js","contexts/CurrentUserContext.js","components/Card/Card.js","components/PopupWithForm/PopupWithForm.js","components/EditProfilePopup/EditProfilePopup.js","components/EditAvatarPopup/EditAvatarPopup.js","components/AddPlacePopup/AddPlacePopup.js","components/Main/Main.js","utils/Api.js","utils/FormValidator.js","utils/mestoFormsSet.js","components/App.js","utils/utils.js","serviceWorker.js","index.js","images/mesto-russia-logo.svg"],"names":["Header","className","href","src","logo","alt","Footer","ImagePopup","card","onClose","onEscPress","React","useRef","useEffect","document","addEventListener","current","link","removeEventListener","onClick","e","stopPropagation","type","aria-label","name","CurrentUserContext","createContext","Card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","user","likeClassName","TrashClassName","length","PopupWithForm","props","isOpen","title","submitBtnLoadingText","submitBtnRegularText","onSubmit","children","popupClassName","useState","isLoading","setIsLoading","finally","noValidate","EditProfilePopup","onUpdateUser","setName","description","setDescription","about","preventDefault","id","placeholder","required","minLength","maxLength","value","onChange","target","EditAvatarPopup","onUpdateAvatar","inputRef","avatar","ref","defaultValue","AddPlacePopup","onUpdateCards","placeName","setPlaceName","placeUrl","setPlaceUrl","Main","onEditProfile","onAddPlace","onEditAvatar","closeAllPopups","onOverlayClick","isEditProfilePopupOpen","isEditAvatarPopupOpen","isAddPlacePopupOpen","selectedCard","cards","map","key","api","baseUrl","headers","changeLikeCardStatus","cardId","unlikeCard","likeCard","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_handleOriginalResponse","inputValues","method","body","JSON","stringify","authorization","FormValidator","formSettings","formElement","_inputList","Array","from","querySelectorAll","inputSelector","_submitBtnElement","querySelector","submitButtonSelector","_inactiveBtnClass","inactiveButtonClass","_activeInputErrorClass","activeInputErrorClass","_inputErrorSelectorComponent","inputErrorSelectorComponent","_formElement","openBtnSelector","openBtnSelectors","find","item","formName","_formOpenBtn","inputElement","errorSelector","errorMessage","errorElement","_getErrorElement","textContent","classList","add","remove","validity","valid","_hideError","_showError","validationMessage","forEach","_checkInputValidity","_setButtonState","element","hasAttribute","setAttribute","removeAttribute","buttonElement","_hasInvalidInput","_disableElement","_enableElement","_setFormListeners","_checkFormValidity","mestoFormsSet","inputErrorClass","App","setIsEditProfilePopupOpen","setIsEditAvatarPopupOpen","setIsAddPlacePopupOpen","setSelectedCard","setCurrentUser","setCards","all","getUserInfo","getInitialCards","userData","initialCards","catch","err","console","log","form","enableValidation","Provider","setUserInfo","setAvatar","newCard","newCards","c","deleteCard","deletedCardIndex","findIndex","slice","splice","cardData","postCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.06b22423.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../../images/mesto-russia-logo.svg';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <a href=\"https://ss.metronews.ru/userfiles/materials/60/605363/858x429.jpg\" className=\"header__logo\">\n        <img src={logo} alt=\"Логотип Mesto Russia\" />\n      </a>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default  Footer;","import React from 'react';\n\nconst ImagePopup = ({ card, onClose, onEscPress }) => {\n\n  const className = `popup popup_content_figure image-popup ${card && 'popup_opened'}`;\n  // Создаем реф для хранения url картинки  для реализации плавного затухания картинки при закрытии попапа.\n  const src = React.useRef('');\n\n  React.useEffect(() => {\n    card && document.addEventListener('keydown', onEscPress);\n    // записываем в реф url картинки после монтирования компонента, если есть card\n    src.current = card && card.link;\n    return (() => {\n      card && document.removeEventListener('keydown', onEscPress);\n    });\n  }, [card, onEscPress]);\n\n\n  return (\n    <section className={className} onClick={onClose}>\n      <figure className=\"figure popup__container\" onClick={(e) => e.stopPropagation()}>\n        <button\n          className=\"close-btn figure__close-btn\"\n          type=\"button\"\n          onClick={onClose}\n          aria-label=\"Закрыть попап\"\n        />\n        <img\n          className=\"figure__image\"\n          // Url картинки берется либо из card.link, либо из рефа (когда картинка закрыавется и card не существует)\n          src={(card && card.link) || src.current}\n          alt={card && card.name}\n        />\n        <figcaption className=\"figure__caption\">{card && card.name}</figcaption>\n      </figure>\n    </section>\n  );\n}\nexport default ImagePopup","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React, {useContext} from 'react';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nconst Card = ({card, onCardClick, onCardLike, onCardDelete}) => {\n  const currentUser = useContext(CurrentUserContext);\n  const isOwn = card.owner._id === currentUser._id;\n  const isLiked = card.likes.some(user => user._id === currentUser._id);\n\n  const handleImageClick = () => {\n    onCardClick(card);\n  }\n  const handleLikeClick = () => {\n    onCardLike(card);\n  }\n  const handleTrashClick = () => {\n    onCardDelete(card);\n  }\n\n  const likeClassName = `card__like-btn ${isLiked && 'card__like-btn_enabled'}`;\n  const TrashClassName = `card__trash-btn ${isOwn && 'card__trash-btn_enabled'}`;\n\n  return (\n    <li className=\"card\">\n      <button\n        className={TrashClassName}\n        aria-label=\"Удалить картинку с подписью\"\n        type=\"button\"\n        name=\"trash\"\n        onClick={handleTrashClick} />\n      <img\n        className=\"card__image\"\n        src={card.link}\n        alt={card.name}\n        onClick={handleImageClick} />\n      <div className=\"card__caption\">\n        <h2 className=\"card__title\">{card.name}</h2>\n        <div className=\"card__like-block\">\n          <button\n            className={likeClassName}\n            type=\"button\"\n            name=\"like\"\n            onClick={handleLikeClick}\n            aria-label=\"Поставить лайк картинке\" />\n          <p className=\"card__like-numbers\">{card.likes.length || ''}</p>\n        </div>\n      </div>\n    </li>\n  );\n}\nexport default Card;","import React, { useState, useEffect } from 'react';\n\nconst PopupWithForm = (props) => {\n  const {\n    name,\n    isOpen,\n    title,\n    submitBtnLoadingText,\n    submitBtnRegularText,\n    onClose,\n    onSubmit,\n    onEscPress,\n    children } = props;\n  const popupClassName = `popup popup_content_form ${name}-popup ${isOpen && 'popup_opened'}`;\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    isOpen && document.addEventListener('keydown', onEscPress);\n    return (() => {\n      isOpen && document.removeEventListener('keydown', onEscPress);\n    });\n  }, [isOpen, onEscPress]);\n\n  const handleSubmit = (e) => {\n    setIsLoading(true);\n    onSubmit(e)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <section className={popupClassName} onClick={onClose}>\n      <form\n        className=\"form popup__container form-to-validate\"\n        name={name}\n        onSubmit={handleSubmit}\n        onClick={(e) => e.stopPropagation()}\n        noValidate\n      >\n        <h3 className=\"form__title\"> {title} </h3>\n        <button\n          className=\"close-btn form__close-btn\"\n          type=\"reset\"\n          name=\"close\"\n          onClick={onClose}\n          aria-label=\"Закрыть попап\"\n        />\n        {children}\n        <button className=\"form__submit-btn\" type=\"submit\">\n          {isLoading ? submitBtnLoadingText : submitBtnRegularText}\n        </button>\n      </form>\n    </section>\n  );\n};\nexport default PopupWithForm;\n\n\n","import React, { useContext, useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\n\nconst EditProfilePopup = ({ isOpen, onClose, onUpdateUser, onEscPress }) => {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState(' ');\n  const [description, setDescription] = useState(' ');\n\n  const handleNameInputChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleDescriptionInputChange = (e) => {\n    setDescription(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    return onUpdateUser({\n      name,\n      about: description,\n    });\n  };\n\n  useEffect(() => {\n    isOpen && setName(currentUser.name);\n    isOpen && setDescription(currentUser.about);\n  }, [isOpen, currentUser.name, currentUser.about]);\n\n  return (\n    <PopupWithForm\n      name='edit-profile'\n      title='Редактировать профиль'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      submitBtnLoadingText='Сохранение'\n      submitBtnRegularText='Сохранить'\n      onEscPress={onEscPress}\n    >\n      <div className=\"form__field\">\n        <input className=\"form__input\"\n          id=\"profile-name\"\n          type=\"text\"\n          name=\"profile-name\"\n          placeholder=\"Имя\"\n          required\n          minLength=\"2\"\n          maxLength=\"40\"\n          value={name}\n          onChange={handleNameInputChange}\n        />\n        <span className=\"form__input-error form__input-error_origin_profile-name\" />\n      </div>\n      <div className=\"form__field\">\n        <input className=\"form__input\"\n          id=\"profile-description\"\n          type=\"text\"\n          name=\"profile-description\"\n          placeholder=\"Описание\"\n          required\n          minLength=\"2\"\n          maxLength=\"200\"\n          value={description}\n          onChange={handleDescriptionInputChange}\n        />\n        <span className=\"form__input-error form__input-error_origin_profile-description\" />\n      </div>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import React, { useContext, useRef } from 'react';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\n\nconst EditAvatarPopup = ({\n  isOpen,\n  onClose,\n  onUpdateAvatar,\n  onEscPress\n}) => {\n  const currentUser = useContext(CurrentUserContext);\n  const inputRef = useRef();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    return onUpdateAvatar({\n      avatar: inputRef.current.value,\n    });\n  };\n\n  return (\n    <PopupWithForm\n      name='update-avatar'\n      title='Обновить аватар'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      submitBtnLoadingText='Сохранение'\n      submitBtnRegularText='Сохранить'\n      onEscPress={onEscPress}\n    >\n      <div className=\"form__field\">\n        <input\n          ref={inputRef}\n          defaultValue={currentUser.avatar}\n          className=\"form__input\"\n          id=\"avatar-link\"\n          type=\"url\"\n          name=\"avatar-link\"\n          placeholder=\"Ссылка на картинку\"\n          required\n        />\n        <span className=\"form__input-error form__input-error_origin_avatar-link\" />\n      </div>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;","import React, { useState, useEffect } from 'react';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\n\nconst AddPlacePopup = ({\n  isOpen,\n  onClose,\n  onUpdateCards,\n  onEscPress\n}) => {\n  const [placeName, setPlaceName] = useState('');\n  const [placeUrl, setPlaceUrl] = useState('');\n\n  const handlePlaceNameInputChange = (e) => {\n    setPlaceName(e.target.value);\n  };\n\n  const handlePlaceUrlInputChange = (e) => {\n    setPlaceUrl(e.target.value);\n  };\n\n  const resetInputs = () => {\n    setPlaceName('');\n    setPlaceUrl('');\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    return onUpdateCards({\n      name: placeName,\n      link: placeUrl\n    });\n  };\n\n  // для возвращения инпутов в исходное состояние при открытии попапа после нажатия esc или клика по оверлею\n  useEffect(() => {\n    isOpen && resetInputs();\n  }, [isOpen]);\n\n  return (\n    <PopupWithForm\n      name='add-card'\n      title='Новое место'\n      isOpen={isOpen}\n      onClose={onClose}\n      submitBtnLoadingText='Сохранение'\n      submitBtnRegularText='Создать'\n      onSubmit={handleSubmit}\n      onEscPress={onEscPress}\n    >\n      <div className=\"form__field\">\n        <input\n          onChange={handlePlaceNameInputChange}\n          value={placeName}\n          className=\"form__input\"\n          id=\"card-name\"\n          type=\"text\"\n          name=\"card-name\"\n          placeholder=\"Название\"\n          required minLength=\"1\"\n          maxLength=\"30\"\n        />\n        <span className=\"form__input-error form__input-error_origin_card-name\" />\n      </div>\n      <div className=\"form__field\">\n        <input\n          onChange={handlePlaceUrlInputChange}\n          value={placeUrl}\n          className=\"form__input\"\n          id=\"card-link\"\n          type=\"url\"\n          name=\"card-link\"\n          placeholder=\"Ссылка на картинку\"\n          required\n        />\n        <span className=\"form__input-error form__input-error_origin_card-link\" />\n      </div>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;","import React, { useContext } from 'react';\nimport ImagePopup from '../ImagePopup/ImagePopup.js';\nimport Card from '../Card/Card.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport EditProfilePopup from '../EditProfilePopup/EditProfilePopup';\nimport EditAvatarPopup from '../EditAvatarPopup/EditAvatarPopup';\nimport AddPlacePopup from '../AddPlacePopup/AddPlacePopup';\n\nconst Main = (props) => {\n  const { onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    closeAllPopups,\n    onCardClick,\n    onUpdateUser,\n    onUpdateAvatar,\n    onCardLike,\n    onCardDelete,\n    onUpdateCards,\n    onEscPress,\n    onOverlayClick,\n    isEditProfilePopupOpen,\n    isEditAvatarPopupOpen,\n    isAddPlacePopupOpen,\n    selectedCard,\n    cards } = props;\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n\n      <section className=\"profile\">\n        <div className=\"profile__content\">\n          <img\n            src={currentUser.avatar}\n            className=\"profile__avatar\"\n            alt={`фото ${currentUser.name}`}\n            onClick={onEditAvatar}\n          />\n          <div className=\"profile__info\">\n            <div className=\"profile__title-block\">\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\n              <button\n                className=\"profile__edit-btn\"\n                type=\"button\"\n                onClick={onEditProfile}\n                aria-label=\"Редактировать профиль\"\n              />\n            </div>\n            <p className=\"profile__description\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button\n          className=\"add-btn\"\n          type=\"button\"\n          onClick={onAddPlace}\n          aria-label=\"Добавить место\"\n        />\n      </section>\n\n      <section className=\"cards\">\n        <ul className=\"cards__container\">\n          {cards.map((card) => (\n            <Card\n              card={card}\n              onCardClick={onCardClick}\n              key={card._id}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete}\n            />\n          ))}\n        </ul>\n      </section>\n\n      {/* <PopupWithForm\n        name='confirmation'\n        title='Вы уверены?'\n        onClose={closeAllPopups}\n        submitBtnText='Да' /> */}\n\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={onUpdateAvatar}\n        onEscPress={onEscPress}\n        onOverlayClick={onOverlayClick}\n      />\n\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={onUpdateUser}\n        onEscPress={onEscPress}\n        onOverlayClick={onOverlayClick}\n      />\n\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n        onEscPress={onEscPress}\n        onOverlayClick={onOverlayClick}\n      />\n\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateCards={onUpdateCards}\n        onEscPress={onEscPress}\n        onOverlayClick={onOverlayClick}\n      />\n\n    </main>\n\n  );\n}\n\nexport default Main;\n\n","class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _handleOriginalResponse(res) {\n    if(res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  setUserInfo(inputValues) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(inputValues)\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  setAvatar(inputValues) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(inputValues)\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  postCard(inputValues) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(inputValues)\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  unlikeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  changeLikeCardStatus = (cardId, isLiked) => {\n    if(isLiked) {\n      return this.unlikeCard(cardId);\n    } else {\n      return this.likeCard(cardId);\n    }\n  }\n}\n\n// Создаем экземпляр API\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: '4925288f-4ad5-4bea-a0ab-09ab5e2fc610',\n    'Content-Type': 'application/json'\n  }\n});","export default class FormValidator {\n  constructor(formSettings, formElement) {\n    this._inputList = Array.from(formElement.querySelectorAll(formSettings.inputSelector));\n    this._submitBtnElement = formElement.querySelector(formSettings.submitButtonSelector);\n    this._inactiveBtnClass = formSettings.inactiveButtonClass;\n    this._activeInputErrorClass = formSettings.activeInputErrorClass;\n    this._inputErrorSelectorComponent = formSettings.inputErrorSelectorComponent;\n    this._formElement = formElement;\n    // Ищем в переданном массиве селектор кнопки, открывающей форму (по имени формы)\n    const openBtnSelector = formSettings.openBtnSelectors.find((item) => item.formName === formElement.name).openBtnSelector;\n    this._formOpenBtn = document.querySelector(openBtnSelector);\n  }\n\n  _getErrorElement(inputElement) {\n    // Селектор ошибки складывается из неизменной строки и id поля ввода\n    const errorSelector = `${this._inputErrorSelectorComponent}${inputElement.id}`;\n    return this._formElement.querySelector(errorSelector);\n  }\n\n  // Методы показывают и скрывают сообщение об ошибке. Ошибка с полем ввода связаны через id поля и class элемента ошибки (так было сделано по замечанию ревьюера взамени использования родственных связей)\n  _showError(inputElement, errorMessage) {\n    const errorElement = this._getErrorElement(inputElement);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._activeInputErrorClass);\n  }\n\n  _hideError(inputElement) {\n    const errorElement = this._getErrorElement(inputElement);\n    errorElement.classList.remove(this._activeInputErrorClass);\n    errorElement.textContent = '';\n  }\n\n  // Проверяет валидность поля ввода и показывает/скрывает ошибку\n  _checkInputValidity(inputElement) {\n    if (inputElement.validity.valid) {\n      this._hideError(inputElement);\n    } else {\n      this._showError(inputElement, inputElement.validationMessage);\n    }\n  }\n\n// Возвращает true, если хотя бы одно из полей формы невалидно\n  _hasInvalidInput() {\n    return this._inputList.some((inputElement) => {\n      return !inputElement.validity.valid;\n    });\n  }\n\n  _setFormListeners() {\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', () => {\n        this._checkInputValidity(inputElement);\n        this._setButtonState(this._submitBtnElement);\n      });\n    });\n  }\n\n  // Добавляют/удаляют атрибут 'disabled' с элемента, если еще не добавлен/удален и добавляют/удаляют соответствующий класс, отвечающий за видимость\n  _disableElement(element) {\n    element.classList.add(this._inactiveBtnClass);\n    if (!element.hasAttribute('disabled')) {\n      element.setAttribute('disabled', true);\n    }\n  }\n\n  _enableElement(element) {\n    element.classList.remove(this._inactiveBtnClass);\n    if (element.hasAttribute('disabled')) {\n      element.removeAttribute('disabled');\n    }\n  }\n\n  // Деактивирует или активирует кнопку submit в зависимости от наличия/отсутствия невалидного поля ввода в форме\n  _setButtonState(buttonElement) {\n    if (this._hasInvalidInput()) {\n      this._disableElement(buttonElement);\n    } else {\n      this._enableElement(buttonElement);\n    }\n  }\n\n  // Проверяет валидность формы: проверяет все поля, включает сообщения об ошибках, меняет состояние кнопки submit\n  // (для проверки формы до начала работы с ней)\n  _checkFormValidity() {\n    this._inputList.forEach((inputElement) => {\n      this._checkInputValidity(inputElement);\n    });\n    this._setButtonState(this._submitBtnElement);\n  }\n\n\n  enableValidation() {\n    this._setFormListeners();\n\n    // Навешиваем слушатель на кнопку, открывающую форму:\n    // он проверяет валидность формы до начала работы с ней (события input)\n    this._formOpenBtn.addEventListener('click', () => {\n      this._checkFormValidity();\n    });\n  }\n}\n\n\n\n","export const mestoFormsSet = {\n  inputSelector: '.form__input',\n  submitButtonSelector: '.form__submit-btn',\n  inactiveButtonClass: 'form__submit-btn_disabled',\n  inputErrorClass: 'form__input-error',\n  activeInputErrorClass: 'form__input-error_active',\n  inputErrorSelectorComponent: '.form__input-error_origin_',\n\n  // имена форм и селекторы кнопок их открывающих передаем как массив объектов\n  openBtnSelectors: [\n    {\n      formName: 'edit-profile',\n      openBtnSelector: '.profile__edit-btn',\n    },\n    {\n      formName: 'add-card',\n      openBtnSelector: '.add-btn',\n    },\n    {\n      formName: 'update-avatar',\n      openBtnSelector: '.profile__avatar'\n    }\n  ]\n};\n","import React, { useState, useEffect } from 'react';\n\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Main from './Main/Main';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { enableValidation } from '../utils/utils';\nimport { mestoFormsSet } from '../utils/mestoFormsSet';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userData, initialCards]) => {\n        setCurrentUser(userData);\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  // Включаем валидацию\n  useEffect(() => {\n    enableValidation(mestoFormsSet);\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(user => user._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        const deletedCardIndex = cards.findIndex((c) => c._id === card._id);\n        const newCards = cards.slice();\n        newCards.splice(deletedCardIndex, 1);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleUpdateUser = (userData) => {\n    return api.setUserInfo(userData)\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        closeAllPopups();\n      });\n  };\n\n  const handleUpdateAvatar = (userData) => {\n    return api.setAvatar(userData)\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        closeAllPopups();\n      });\n  };\n\n  const handleAddPlaceSubmit = (cardData) => {\n    return api.postCard(cardData)\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        closeAllPopups();\n      });\n  };\n\n  const handleEscPress = (e) => {\n    if (e.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  const closeAllPopups = () => {\n    isEditProfilePopupOpen && setIsEditProfilePopupOpen(false);\n    isEditAvatarPopupOpen && setIsEditAvatarPopupOpen(false);\n    isAddPlacePopupOpen && setIsAddPlacePopupOpen(false);\n    selectedCard && setSelectedCard(null);\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header />\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            closeAllPopups={closeAllPopups}\n            onCardClick={handleCardClick}\n            onUpdateUser={handleUpdateUser}\n            onUpdateAvatar={handleUpdateAvatar}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            onUpdateCards={handleAddPlaceSubmit}\n            onEscPress={handleEscPress}\n            isEditProfilePopupOpen={isEditProfilePopupOpen}\n            isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n            isAddPlacePopupOpen={isAddPlacePopupOpen}\n            selectedCard={selectedCard}\n            cards={cards}\n          />\n          <Footer />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;","import FormValidator from './FormValidator';\n\n// Функция включает валидацию для всех форм в документе\nexport const enableValidation = function(formSettings) {\n  const forms = Array.from(document.querySelectorAll('.form-to-validate'));\n  forms.forEach((form) => {\n    const formValidator = new FormValidator(formSettings, form);\n    formValidator.enableValidation();\n  });\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mesto-russia-logo.a347391f.svg\";"],"sourceRoot":""}