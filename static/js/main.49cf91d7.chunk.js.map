{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/PopupWithForm/PopupWithForm.js","components/ImagePopup/ImagePopup.js","contexts/CurrentUserContext.js","components/Card/Card.js","components/EditProfilePopup/EditProfilePopup.js","components/EditAvatarPopup/EditAvatarPopup.js","components/AddPlacePopup/AddPlacePopup.js","components/Main/Main.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/mesto-russia-logo.svg"],"names":["Header","className","href","src","logo","alt","Footer","PopupWithForm","props","name","isOpen","title","onClose","submitBtnText","onSubmit","onEscPress","onOverlayClick","children","React","useEffect","document","addEventListener","removeEventListener","onClick","noValidate","type","aria-label","ImagePopup","card","useRef","current","link","CurrentUserContext","createContext","Card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","user","likeClassName","TrashClassName","length","EditProfilePopup","onUpdateUser","useState","setName","about","description","setDescription","e","preventDefault","id","placeholder","required","minLength","maxLength","value","onChange","target","EditAvatarPopup","onUpdateAvatar","inputRef","avatar","ref","defaultValue","AddPlacePopup","onUpdateCards","placeName","setPlaceName","placeUrl","setPlaceUrl","resetInputs","Main","onEditProfile","onAddPlace","onEditAvatar","closeAllPopups","isEditProfilePopupOpen","isEditAvatarPopupOpen","isAddPlacePopupOpen","selectedCard","cards","map","key","api","baseUrl","headers","changeLikeCardStatus","cardId","unlikeCard","likeCard","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_handleOriginalResponse","inputValues","method","body","JSON","stringify","authorization","App","setIsEditProfilePopupOpen","setIsEditAvatarPopupOpen","setIsAddPlacePopupOpen","setSelectedCard","setCurrentUser","setCards","all","getUserInfo","getInitialCards","userData","initialCards","catch","err","console","log","Provider","setUserInfo","setAvatar","newCard","newCards","c","deleteCard","deletedCardIndex","findIndex","slice","splice","cardData","postCard","currentTarget","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.49cf91d7.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../../images/mesto-russia-logo.svg';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <a href=\"https://ss.metronews.ru/userfiles/materials/60/605363/858x429.jpg\" className=\"header__logo\">\n        <img src={logo} alt=\"Логотип Mesto Russia\" />\n      </a>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default  Footer;","import React from 'react';\n\nconst PopupWithForm = (props) => {\n  const { name,\n    isOpen,\n    title,\n    onClose,\n    submitBtnText,\n    onSubmit,\n    onEscPress,\n    onOverlayClick,\n    children } = props;\n  const className = `popup popup_content_form ${name}-popup ${isOpen && 'popup_opened'}`;\n\n  React.useEffect(() => {\n    isOpen && document.addEventListener('keydown', onEscPress);\n    return (() => {\n      document.removeEventListener('keydown', onEscPress);\n    });\n  });\n\n  return (\n    <section className={className} onClick={onOverlayClick}>\n      <form className=\"form popup__container\" name={name} onSubmit={onSubmit} noValidate>\n        <h3 className=\"form__title\"> {title} </h3>\n        <button\n          className=\"close-btn form__close-btn\"\n          type=\"reset\"\n          name=\"close\"\n          onClick={onClose}\n          aria-label=\"Закрыть попап\" />\n        {children}\n        <button className=\"form__submit-btn\" type=\"submit\">{submitBtnText}</button>\n      </form>\n    </section>\n  );\n};\nexport default PopupWithForm;\n\n\n","import React from 'react';\n\nconst ImagePopup = ({ card, onClose, onEscPress, onOverlayClick }) => {\n\n  const className = `popup popup_content_figure image-popup ${card && 'popup_opened'}`;\n  // Создаем реф для реализации плавного затухания картинки при закрытии попапа.\n  const src = React.useRef('');\n  \n  React.useEffect(() => {\n    card && document.addEventListener('keydown', onEscPress);\n    // записываем в реф url картинки, когда появляется card\n    src.current = card && card.link;\n    return (() => {\n      card && document.removeEventListener('keydown', onEscPress);\n    });\n  });\n\n\n  return (\n    <section className={className} onClick={onOverlayClick} >\n      <figure className=\"figure popup__container\">\n        <button\n          className=\"close-btn figure__close-btn\"\n          type=\"button\"\n          onClick={onClose}\n          aria-label=\"Закрыть попап\" />\n        <img\n          className=\"figure__image\"\n          // Url картинки берется либо из card.link, либо из рефа (когда картинка закрыавется и card не существует)\n          src={(card && card.link) || src.current}\n          alt={card && card.name} />\n        <figcaption className=\"figure__caption\">{card && card.name} </figcaption>\n      </figure>\n    </section>\n  );\n}\nexport default ImagePopup","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React, {useContext} from 'react';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nconst Card = ({card, onCardClick, onCardLike, onCardDelete}) => {\n  const currentUser = useContext(CurrentUserContext);\n  const isOwn = card.owner._id === currentUser._id;\n  const isLiked = card.likes.some(user => user._id === currentUser._id);\n  // const [isLiked, setIsLiked] = useState(wasLiked);\n\n  const handleImageClick = () => {\n    onCardClick(card);\n  }\n  const handleLikeClick = () => {\n    onCardLike(card);\n  }\n  const handleTrashClick = () => {\n    onCardDelete(card);\n  }\n\n  const likeClassName = `card__like-btn ${isLiked && 'card__like-btn_enabled'}`;\n  const TrashClassName = `card__trash-btn ${isOwn && 'card__trash-btn_enabled'}`;\n\n  return (\n    <li className=\"card\">\n      <button\n        className={TrashClassName}\n        aria-label=\"Удалить картинку с подписью\"\n        type=\"button\"\n        name=\"trash\"\n        onClick={handleTrashClick} />\n      <img\n        className=\"card__image\"\n        src={card.link}\n        alt={card.name}\n        onClick={handleImageClick} />\n      <div className=\"card__caption\">\n        <h2 className=\"card__title\">{card.name}</h2>\n        <div className=\"card__like-block\">\n          <button\n            className={likeClassName}\n            type=\"button\"\n            name=\"like\"\n            onClick={handleLikeClick}\n            aria-label=\"Поставить лайк картинке\" />\n          <p className=\"card__like-numbers\">{card.likes.length || ''}</p>\n        </div>\n      </div>\n    </li>\n  );\n}\nexport default Card;","import React, { useContext, useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\n\nconst EditProfilePopup = ({ isOpen, onClose, onUpdateUser, onEscPress, onOverlayClick }) => {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState(currentUser.name);\n  const [description, setDescription] = useState(currentUser.about);\n\n  const handleNameInputChange = (e) => {\n    setName(e.target.value);\n  }\n  const handleDescriptionInputChange = (e) => {\n    setDescription(e.target.value);\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  useEffect(() => {\n    isOpen && setName(currentUser.name);\n    isOpen && setDescription(currentUser.about);\n  }, [isOpen, currentUser.name, currentUser.about]);\n\n  return (\n    <PopupWithForm\n      name='edit-profile'\n      title='Редактировать профиль'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      submitBtnText='Сохранить'\n      onEscPress={onEscPress}\n      onOverlayClick={onOverlayClick}>\n      <div className=\"form__field\">\n        <input className=\"form__input\"\n          id=\"profile-name\"\n          type=\"text\"\n          name=\"profile-name\"\n          placeholder=\"Имя\"\n          required minLength=\"2\"\n          maxLength=\"40\"\n          value={name || ''}\n          onChange={handleNameInputChange} />\n        <span className=\"form__input-error form__input-error_origin_profile-name\" />\n      </div>\n      <div className=\"form__field\">\n        <input className=\"form__input\"\n          id=\"profile-description\"\n          type=\"text\"\n          name=\"profile-description\"\n          placeholder=\"Описание\"\n          required minLength=\"2\"\n          value={description || ''}\n          maxLength=\"200\"\n          onChange={handleDescriptionInputChange} />\n        <span className=\"form__input-error form__input-error_origin_profile-description\" />\n      </div>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import React, { useContext, useRef } from 'react';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\n\nconst EditAvatarPopup = ({ isOpen, onClose, onUpdateAvatar, onEscPress, onOverlayClick }) => {\n  const currentUser = useContext(CurrentUserContext);\n  const inputRef = useRef();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: inputRef.current.value,\n    });\n  };\n\n  return (\n    <PopupWithForm\n      name='update-avatar'\n      title='Обновить аватар'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      submitBtnText='Сохранить'\n      onEscPress={onEscPress}\n      onOverlayClick={onOverlayClick}>\n      <div className=\"form__field\">\n        <input\n          ref={inputRef}\n          defaultValue={currentUser.avatar}\n          className=\"form__input\"\n          id=\"avatar-link\"\n          type=\"url\"\n          name=\"avatar-link\"\n          placeholder=\"Ссылка на картинку\"\n          required />\n        <span className=\"form__input-error form__input-error_origin_avatar-link\" />\n      </div>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;","import React, { useState, useEffect } from 'react';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\n\nconst AddPlacePopup = ({ isOpen, onClose, onUpdateCards, onEscPress, onOverlayClick }) => {\n  const [placeName, setPlaceName] = useState('');\n  const [placeUrl, setPlaceUrl] = useState('');\n\n  const handlePlaceNameInputChange = (e) => {\n    setPlaceName(e.target.value);\n  };\n\n  const handlePlaceUrlInputChange = (e) => {\n    setPlaceUrl(e.target.value);\n  };\n\n  const resetInputs = () => {\n    setPlaceName('');\n    setPlaceUrl('');\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdateCards({\n      name: placeName,\n      link: placeUrl\n    });\n    resetInputs();\n  };\n\n  // для возвращения инпутов в исходное состояние при открытии попапа после нажатия esc или клика по оверлею\n  useEffect(() => {\n    isOpen && resetInputs();\n  }, [isOpen]);\n\n  return (\n    <PopupWithForm\n      name='add-card'\n      title='Новое место'\n      isOpen={isOpen}\n      onClose={onClose}\n      submitBtnText='Создать'\n      onSubmit={handleSubmit}\n      onEscPress={onEscPress}\n      onOverlayClick={onOverlayClick} >\n      <div className=\"form__field\">\n        <input\n          onChange={handlePlaceNameInputChange}\n          value={placeName}\n          className=\"form__input\"\n          id=\"card-name\"\n          type=\"text\"\n          name=\"card-name\"\n          placeholder=\"Название\"\n          required minLength=\"1\"\n          maxLength=\"30\" />\n        <span className=\"form__input-error form__input-error_origin_card-name\" />\n      </div>\n      <div className=\"form__field\">\n        <input\n          onChange={handlePlaceUrlInputChange}\n          value={placeUrl}\n          className=\"form__input\"\n          id=\"card-link\"\n          type=\"url\"\n          name=\"card-link\"\n          placeholder=\"Ссылка на картинку\"\n          required />\n        <span className=\"form__input-error form__input-error_origin_card-link\" />\n      </div>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;","import React, { useContext } from 'react';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\nimport ImagePopup from '../ImagePopup/ImagePopup.js';\nimport Card from '../Card/Card.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport EditProfilePopup from '../EditProfilePopup/EditProfilePopup';\nimport EditAvatarPopup from '../EditAvatarPopup/EditAvatarPopup';\nimport AddPlacePopup from '../AddPlacePopup/AddPlacePopup';\n\nconst Main = (props) => {\n  const { onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    closeAllPopups,\n    onCardClick,\n    onUpdateUser,\n    onUpdateAvatar,\n    onCardLike,\n    onCardDelete,\n    onUpdateCards,\n    onEscPress,\n    onOverlayClick,\n    isEditProfilePopupOpen,\n    isEditAvatarPopupOpen,\n    isAddPlacePopupOpen,\n    selectedCard,\n    cards } = props;\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n\n      <section className=\"profile\">\n        <div className=\"profile__content\">\n          <img\n            src={currentUser.avatar}\n            className=\"profile__avatar\"\n            alt={`фото ${currentUser.name}`}\n            onClick={onEditAvatar} />\n          <div className=\"profile__info\">\n            <div className=\"profile__title-block\">\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\n              <button\n                className=\"profile__edit-btn\"\n                type=\"button\"\n                onClick={onEditProfile}\n                aria-label=\"Редактировать профиль\" />\n            </div>\n            <p className=\"profile__description\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button\n          className=\"add-btn\"\n          type=\"button\"\n          onClick={onAddPlace}\n          aria-label=\"Добавить место\" />\n      </section>\n\n      <section className=\"cards\">\n        <ul className=\"cards__container\">\n          {cards.map((card) => (\n            <Card\n              card={card}\n              onCardClick={onCardClick}\n              key={card._id}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete} />\n          ))}\n        </ul>\n      </section>\n\n      <PopupWithForm\n        name='confirmation'\n        title='Вы уверены?'\n        onClose={closeAllPopups}\n        submitBtnText='Да' />\n\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={onUpdateAvatar}\n        onEscPress={onEscPress}\n        onOverlayClick={onOverlayClick} />\n\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={onUpdateUser}\n        onEscPress={onEscPress}\n        onOverlayClick={onOverlayClick} />\n\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n        onEscPress={onEscPress}\n        onOverlayClick={onOverlayClick} />\n\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateCards={onUpdateCards}\n        onEscPress={onEscPress}\n        onOverlayClick={onOverlayClick} />\n\n    </main>\n\n  );\n}\n\nexport default Main;\n\n","class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _handleOriginalResponse(res) {\n    if(res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  setUserInfo(inputValues) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(inputValues)\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  setAvatar(inputValues) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(inputValues)\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  postCard(inputValues) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(inputValues)\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  unlikeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  changeLikeCardStatus = (cardId, isLiked) => {\n    if(isLiked) {\n      return this.unlikeCard(cardId);\n    } else {\n      return this.likeCard(cardId);\n    }\n  }\n}\n\n// Создаем экземпляр API\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: '4925288f-4ad5-4bea-a0ab-09ab5e2fc610',\n    'Content-Type': 'application/json'\n  }\n});","import React, { useState, useEffect } from 'react';\n\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Main from './Main/Main';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState();\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userData, initialCards]) => {\n        setCurrentUser(userData);\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(user => user._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        const deletedCardIndex = cards.findIndex((c) => c._id === card._id);\n        const newCards = cards.slice();\n        newCards.splice(deletedCardIndex, 1);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleUpdateUser = (userData) => {\n    api.setUserInfo(userData)\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .then(() => {\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleUpdateAvatar = (userData) => {\n    api.setAvatar(userData)\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .then(() => {\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddPlaceSubmit = (cardData) => {\n    api.postCard(cardData)\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n      })\n      .then(() => {\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleEscPress = (e) => {\n    if (e.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  const handleOverlayClick = (e) => {\n    if (e.currentTarget === e.target) {\n      closeAllPopups();\n    }\n  }\n\n  const closeAllPopups = () => {\n    isEditProfilePopupOpen && setIsEditProfilePopupOpen(false);\n    isEditAvatarPopupOpen && setIsEditAvatarPopupOpen(false);\n    isAddPlacePopupOpen && setIsAddPlacePopupOpen(false);\n    selectedCard && setSelectedCard();\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header />\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            closeAllPopups={closeAllPopups}\n            onCardClick={handleCardClick}\n            onUpdateUser={handleUpdateUser}\n            onUpdateAvatar={handleUpdateAvatar}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            onUpdateCards={handleAddPlaceSubmit}\n            onEscPress={handleEscPress}\n            onOverlayClick={handleOverlayClick}\n            isEditProfilePopupOpen={isEditProfilePopupOpen}\n            isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n            isAddPlacePopupOpen={isAddPlacePopupOpen}\n            selectedCard={selectedCard}\n            cards={cards} />\n          <Footer />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { enableValidation } from './utils/utils';\nimport {mestoFormsSet} from './utils/mestoFormsSet';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// Включаем валидацию\n// enableValidation(mestoFormsSet);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mesto-russia-logo.a347391f.svg\";"],"sourceRoot":""}