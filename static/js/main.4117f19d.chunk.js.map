{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/PopupWithForm/PopupWithForm.js","components/ImagePopup/ImagePopup.js","utils/Api.js","components/Card/Card.js","components/Main/Main.js","components/App.js","serviceWorker.js","index.js","images/mesto-russia-logo.svg"],"names":["Header","className","href","src","logo","alt","Footer","PopupWithForm","props","name","isOpen","title","onClose","submitBtnText","children","noValidate","type","onClick","aria-label","ImagePopup","card","link","api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_handleOriginalResponse","inputValues","method","body","JSON","stringify","cardId","authorization","Card","onCardClick","wasLiked","isOwner","React","useState","isLiked","setIsLiked","likeClassName","TrashClassName","likes","length","Main","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","userId","setUserId","useEffect","all","getUserInfo","getInitialCards","userData","initialCards","about","_id","avatar","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","key","some","user","owner","onClosePopups","isEditAvatarPopupOpen","id","placeholder","required","isEditProfilePopupOpen","minLength","maxLength","selectedCard","isImagePopupOpen","isAddPlacePopupOpen","App","setIsEditProfilePopupOpen","setIsEditAvatarPopupOpen","setIsAddPlacePopupOpen","setImagePopupOpen","setSelectedCard","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.4117f19d.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../../images/mesto-russia-logo.svg';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <a href=\"https://ss.metronews.ru/userfiles/materials/60/605363/858x429.jpg\" className=\"header__logo\">\n        <img src={logo} alt=\"Логотип Mesto Russia\" />\n      </a>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default  Footer;","import React from 'react';\n\nconst PopupWithForm = (props) => {\n  const { name,\n    isOpen,\n    title,\n    onClose,\n    submitBtnText,\n    children } = props;\n  const className = `popup popup_content_form ${name}-popup ${isOpen && 'popup_opened'}`;\n\n  return (\n    <section className={className}>\n      <form className=\"form popup__container\" name={name} noValidate>\n        <h3 className=\"form__title\"> {title} </h3>\n        <button\n          className=\"close-btn form__close-btn\"\n          type=\"reset\"\n          name=\"close\"\n          onClick={onClose}\n          aria-label=\"Закрыть попап\" />\n        {children}\n        <button className=\"form__submit-btn\" type=\"submit\">{submitBtnText}</button>\n      </form>\n    </section>\n  );\n};\nexport default PopupWithForm;\n\n\n","import React from 'react';\n\nconst ImagePopup = ({card, onClose, isOpen}) => {\n  \n  const className = `popup popup_content_figure image-popup ${isOpen && 'popup_opened'}`;\n\n  return (\n    <section className={className} >\n      <figure className=\"figure popup__container\">\n        <button\n          className=\"close-btn figure__close-btn\"\n          type=\"button\"\n          onClick={onClose}\n          aria-label=\"Закрыть попап\" />\n        <img\n          className=\"figure__image\"\n          src={card && card.link}\n          alt={card && card.name} />\n        <figcaption className=\"figure__caption\">{card && card.name} </figcaption>\n      </figure>\n    </section>\n  );\n}\nexport default ImagePopup","class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _handleOriginalResponse(res) {\n    if(res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  patchUserInfo(inputValues) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(inputValues)\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  patchAvatar(inputValues) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(inputValues)\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  postCard(inputValues) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(inputValues)\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n\n  unlikeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._handleOriginalResponse);\n  }\n}\n\n// Создаем экземпляр API\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: '4925288f-4ad5-4bea-a0ab-09ab5e2fc610',\n    'Content-Type': 'application/json'\n  }\n});","import React from 'react';\n\nconst Card = ({card, onCardClick, wasLiked, isOwner}) => {\n\n  const [isLiked, setIsLiked] = React.useState(wasLiked);\n\n  const handleImageClick = () => {\n    onCardClick(card);\n  }\n  const handleLikeClick = () => {\n    // console.log('Like');\n    // console.log(isLiked);\n    isLiked ? setIsLiked(false) : setIsLiked(true);\n  }\n\n  const likeClassName = `card__like-btn ${isLiked && 'card__like-btn_enabled'}`;\n\n  const TrashClassName = `card__trash-btn ${isOwner && 'card__trash-btn_enabled'}`;\n\n\n  return (\n    <li className=\"card\">\n      <button\n        className={TrashClassName}\n        aria-label=\"Удалить картинку с подписью\"\n        type=\"button\"\n        name=\"trash\" />\n      <img\n        className=\"card__image\"\n        src={card.link}\n        alt={card.name}\n        onClick={handleImageClick} />\n      <div className=\"card__caption\">\n        <h2 className=\"card__title\">{card.name}</h2>\n        <div className=\"card__like-block\">\n          <button\n            className={likeClassName}\n            type=\"button\"\n            name=\"like\"\n            onClick={handleLikeClick}\n            aria-label=\"Поставить лайк картинке\" />\n          <p className=\"card__like-numbers\">{card.likes.length || ''}</p>\n        </div>\n      </div>\n    </li>\n  );\n}\nexport default Card;","import React from 'react';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\nimport ImagePopup from '../ImagePopup/ImagePopup.js';\nimport { api } from '../../utils/Api.js';\nimport Card from '../Card/Card.js';\n\nconst Main = (props) => {\n  const [userName, setUserName] = React.useState('Инкогнито');\n  const [userDescription, setUserDescription] = React.useState('Инкогнитов');\n  const [userAvatar, setUserAvatar] = React.useState('../images/profile_kusto.jpg');\n  const [cards, setCards] = React.useState([]);\n  const [userId, setUserId] = React.useState(null);\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userData, initialCards]) => {\n        // console.log(initialCards);\n        setUserName(userData.name);\n        setUserDescription(userData.about);\n        setUserId(userData._id)\n        setUserAvatar(userData.avatar);\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n\n  return (\n    <main className=\"content\">\n\n      <section className=\"profile\">\n        <div className=\"profile__content\">\n          <img\n            src={userAvatar}\n            className=\"profile__avatar\"\n            alt={`фото ${userName}`}\n            onClick={props.onEditAvatar} />\n          <div className=\"profile__info\">\n            <div className=\"profile__title-block\">\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button\n                className=\"profile__edit-btn\"\n                type=\"button\"\n                onClick={props.onEditProfile}\n                aria-label=\"Редактировать профиль\" />\n            </div>\n            <p className=\"profile__description\">{userDescription}</p>\n          </div>\n        </div>\n        <button\n          className=\"add-btn\"\n          type=\"button\"\n          onClick={props.onAddPlace}\n          aria-label=\"Добавить место\" />\n      </section>\n\n      <section className=\"cards\">\n        <ul className=\"cards__container\">\n          {cards.map((card) => (\n            <Card\n              card={card}\n              onCardClick={props.onCardClick}\n              key={card._id}\n              wasLiked={card.likes.some(user => user._id === userId)}\n              isOwner={card.owner._id === userId} />\n          ))}\n        </ul>\n      </section>\n\n      <PopupWithForm\n        name='confirmation'\n        title='Вы уверены?'\n        onClose={props.onClosePopups}\n        submitBtnText='Да' />\n\n      <PopupWithForm\n        name='update-avatar'\n        title='Обновить аватар'\n        isOpen={props.isEditAvatarPopupOpen}\n        onClose={props.onClosePopups}\n        submitBtnText='Сохранить'>\n        <div className=\"form__field\">\n          <input\n            className=\"form__input\"\n            id=\"avatar-link\"\n            type=\"url\"\n            name=\"avatar-link\"\n            placeholder=\"Ссылка на картинку\"\n            required />\n          <span className=\"form__input-error form__input-error_origin_avatar-link\" />\n        </div>\n      </PopupWithForm>\n\n      <PopupWithForm\n        name='edit-profile'\n        title='Редактировать профиль'\n        isOpen={props.isEditProfilePopupOpen}\n        onClose={props.onClosePopups}\n        submitBtnText='Сохранить'>\n        <div className=\"form__field\">\n          <input className=\"form__input\"\n            id=\"profile-name\"\n            type=\"text\"\n            name=\"profile-name\"\n            placeholder=\"Имя\"\n            required minLength=\"2\"\n            maxLength=\"40\" />\n          <span className=\"form__input-error form__input-error_origin_profile-name\" />\n        </div>\n        <div className=\"form__field\">\n          <input className=\"form__input\"\n            id=\"profile-description\"\n            type=\"text\"\n            name=\"profile-description\"\n            placeholder=\"Описание\"\n            required minLength=\"2\"\n            maxLength=\"200\" />\n          <span className=\"form__input-error form__input-error_origin_profile-description\" />\n        </div>\n      </PopupWithForm>\n\n      <ImagePopup\n        card={props.selectedCard}\n        onClose={props.onClosePopups}\n        isOpen={props.isImagePopupOpen} />\n\n      <PopupWithForm\n        name='add-card'\n        title='Новое место'\n        isOpen={props.isAddPlacePopupOpen}\n        onClose={props.onClosePopups}\n        submitBtnText='Создать'>\n        <div className=\"form__field\">\n          <input\n            className=\"form__input\"\n            id=\"card-name\"\n            type=\"text\"\n            name=\"card-name\"\n            placeholder=\"Название\"\n            required minLength=\"1\"\n            maxLength=\"30\" />\n          <span className=\"form__input-error form__input-error_origin_card-name\" />\n        </div>\n        <div className=\"form__field\">\n          <input\n            className=\"form__input\"\n            id=\"card-link\"\n            type=\"url\"\n            name=\"card-link\"\n            placeholder=\"Ссылка на картинку\"\n            required />\n          <span className=\"form__input-error form__input-error_origin_card-link\" />\n        </div>\n      </PopupWithForm>\n\n\n    </main>\n\n  );\n}\n\nexport default Main;\n\n","import React from 'react';\n\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Main from './Main/Main';\n\nfunction App(props) {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  // const handleLogIn = (id) => {\n  //   setUserId(id);\n  // }\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  const closeAllPopups = () => {\n    isEditProfilePopupOpen && setIsEditProfilePopupOpen(false);\n    isEditAvatarPopupOpen && setIsEditAvatarPopupOpen(false);\n    isAddPlacePopupOpen && setIsAddPlacePopupOpen(false);\n    isImagePopupOpen && setImagePopupOpen(false);\n    setTimeout(setSelectedCard, 500);\n  }\n\n  const handleCardClick = (card) => {\n    setImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page__container\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onClosePopups={closeAllPopups}\n          onCardClick={handleCardClick}\n          // onLoadPage={handleLogIn}\n          isEditProfilePopupOpen={isEditProfilePopupOpen}\n          isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n          isAddPlacePopupOpen={isAddPlacePopupOpen}\n          isImagePopupOpen={isImagePopupOpen}\n          selectedCard={selectedCard}\n          // userId={userId}\n        />\n        <Footer />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mesto-russia-logo.a347391f.svg\";"],"sourceRoot":""}